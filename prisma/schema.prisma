datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum TipoMovimiento {
  ENTRADA
  SALIDA
}

enum TipoDocumento {
  FACTURA
  REMITO
  PRESUPUESTO
  CONTEO
}

//Categorias, va a tener una categoria que sea por ejemplo "consumibles/impuestos/alquiler etc.", donde voy a agrupar los impuestos. luz, gas, alquiler etc..
model Categorias {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())

  nombre   String       @unique
  products Productos[]
}

model Productos {
  id                String              @id @default(uuid())
  createdAt         DateTime            @default(now())

  codigoBarra       String              @unique //todo producto que no tenga codigo de barra, comenzara con 2333[xxxxxx]
  precioActual      Float               @default(0)
  stock             Int                 @default(0)
  nombre            String

  descripcion       String?
  idCategoria       String?
  size              Float?
  unidad            String?
  imagen            String?             @db.Text

  categoria         Categorias?         @relation(fields: [idCategoria], references: [id])
  precios           Precios[]
  proveedores       Proveedores[]
  detalleDocumento  DetalleDocumento[]
}

model Proveedores {
  id              String      @id @default(uuid())
  createdAt       DateTime    @default(now())

  cuit            String      @unique
  nombre          String      @unique
  telefono        String      @default("0800-completar-telefono")
  email           String      @default("completar@email.com")

  persona         String?
  iva             String?
  interno         Boolean     @default(false)
  productos       Productos[]
  documentos      Documentos[]
}

model Documentos {
  id                  String             @id @default(uuid())
  createdAt           DateTime           @default(now())

  idProveedor         String
  numeroDocumento     String             // Identificador único de la factura @map("numeroFactura")
  fecha               DateTime
  tieneImpuestos      Boolean            @default(false)

  tipoDocumento       TipoDocumento
  tipoMovimiento      TipoMovimiento
  detalle             DetalleDocumento[]
  proveedor           Proveedores        @relation(fields: [idProveedor], references: [id])
  total               Float              @default(0)

  @@unique([idProveedor, numeroDocumento]) // Asegura que cada factura sea única por proveedor
}

model DetalleDocumento {
  id                  String            @id @default(uuid())
  createdAt           DateTime          @default(now())

  docRelacionado      String
  idProducto          String
  cantidad            Int
  precioUnitario      Float

  documento           Documentos        @relation(fields: [docRelacionado], references: [id])
  producto            Productos         @relation(fields: [idProducto], references: [id])
}

model Precios {
  id                  Int               @id @default(autoincrement())
  createdAt           DateTime          @default(now())

  precio              Float
  idProducto          String
  producto            Productos         @relation(fields: [idProducto], references: [id])
}
